C51 COMPILER V9.53.0.0   SOFT_UART                                                         03/25/2015 15:09:06 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE SOFT_UART
OBJECT MODULE PLACED IN ..\ProjOut\Soft_UART.obj
COMPILER INVOKED BY: C:\Program Files\Keil\C51\BIN\C51.EXE ..\ProgSource\Soft_UART.c LARGE OPTIMIZE(8,SPEED) CODE PRINT(
                    -..\ProjList\Soft_UART.lst) OBJECT(..\ProjOut\Soft_UART.obj)

line level    source

   1          
   2          /*************  功能说明        **************
   3          
   4          本文件为模拟串口发送程序, 一般为测试监控用.
   5          
   6          串口参数:9600,8,n,1.
   7          
   8          可以根据主时钟自动适应.
   9          
  10          ******************************************/
  11          
  12          #include        "soft_uart.h"
  13          
  14          sbit    P_TXD = P3^1;   //定义模拟串口发送端,可以是任意IO
  15          
  16          //========================================================================
  17          // 函数: void   BitTime(void)
  18          // 描述: 位时间函数。
  19          // 参数: none.
  20          // 返回: none.
  21          // 版本: VER1.0
  22          // 日期: 2013-4-1
  23          // 备注: 
  24          //========================================================================
  25          void    BitTime(void)
  26          {
  27   1              u16 i;
  28   1              i = ((MAIN_Fosc / 100) * 104) / 130000L - 1;            //根据主时钟来计算位时间
  29   1              while(--i);
  30   1      }
  31          
  32          //========================================================================
  33          // 函数: void   TxSend(uchar dat)
  34          // 描述: 模拟串口发送一个字节。9600，N，8，1
  35          // 参数: dat: 要发送的数据字节.
  36          // 返回: none.
  37          // 版本: VER1.0
  38          // 日期: 2013-4-1
  39          // 备注: 
  40          //========================================================================
  41          void    TxSend(u8 dat)
  42          {
  43   1              u8      i;
  44   1              EA = 0;
  45   1              P_TXD = 0;
  46   1              BitTime();
  47   1              for(i=0; i<8; i++)
  48   1              {
  49   2                      if(dat & 1)             P_TXD = 1;
  50   2                      else                    P_TXD = 0;
  51   2                      dat >>= 1;
  52   2                      BitTime();
  53   2              }
  54   1              P_TXD = 1;
C51 COMPILER V9.53.0.0   SOFT_UART                                                         03/25/2015 15:09:06 PAGE 2   

  55   1              EA = 1;
  56   1              BitTime();
  57   1              BitTime();
  58   1      }
  59          
  60          //========================================================================
  61          // 函数: void PrintString(unsigned char code *puts)
  62          // 描述: 模拟串口发送一串字符串。9600，N，8，1
  63          // 参数: *puts: 要发送的字符指针.
  64          // 返回: none.
  65          // 版本: VER1.0
  66          // 日期: 2013-4-1
  67          // 备注: 
  68          //========================================================================
  69          void PrintString(unsigned char code *puts)
  70          {
  71   1          for (; *puts != 0;  puts++)  TxSend(*puts);
  72   1      }
  73          
C51 COMPILER V9.53.0.0   SOFT_UART                                                         03/25/2015 15:09:06 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION BitTime (BEGIN)
                                           ; SOURCE LINE # 25
                                           ; SOURCE LINE # 26
                                           ; SOURCE LINE # 28
;---- Variable 'i' assigned to Register 'R6/R7' ----
0000 7FD7              MOV     R7,#0D7H
0002 7E00              MOV     R6,#00H
0004         ?C0001:
                                           ; SOURCE LINE # 29
0004 EF                MOV     A,R7
0005 1F                DEC     R7
0006 7001              JNZ     ?C0014
0008 1E                DEC     R6
0009         ?C0014:
0009 14                DEC     A
000A 4E                ORL     A,R6
000B 70F7              JNZ     ?C0001
000D         ?C0002:
                                           ; SOURCE LINE # 30
000D         ?C0003:
000D 22                RET     
             ; FUNCTION BitTime (END)

             ; FUNCTION _TxSend (BEGIN)
                                           ; SOURCE LINE # 41
;---- Variable 'dat' assigned to Register 'R5' ----
0000 AD07              MOV     R5,AR7
                                           ; SOURCE LINE # 42
                                           ; SOURCE LINE # 44
0002 C2AF              CLR     EA
                                           ; SOURCE LINE # 45
0004 C2B1              CLR     P_TXD
                                           ; SOURCE LINE # 46
0006 120000      R     LCALL   BitTime
                                           ; SOURCE LINE # 47
;---- Variable 'i' assigned to Register 'R4' ----
0009 E4                CLR     A
000A FC                MOV     R4,A
000B         ?C0004:
                                           ; SOURCE LINE # 48
                                           ; SOURCE LINE # 49
000B ED                MOV     A,R5
000C 30E004            JNB     ACC.0,?C0007
000F D2B1              SETB    P_TXD
0011 8002              SJMP    ?C0008
0013         ?C0007:
                                           ; SOURCE LINE # 50
0013 C2B1              CLR     P_TXD
0015         ?C0008:
                                           ; SOURCE LINE # 51
0015 ED                MOV     A,R5
0016 C3                CLR     C
0017 13                RRC     A
0018 FD                MOV     R5,A
                                           ; SOURCE LINE # 52
0019 120000      R     LCALL   BitTime
                                           ; SOURCE LINE # 53
001C 0C                INC     R4
001D EC                MOV     A,R4
C51 COMPILER V9.53.0.0   SOFT_UART                                                         03/25/2015 15:09:06 PAGE 4   

001E B408EA            CJNE    A,#08H,?C0004
0021         ?C0005:
                                           ; SOURCE LINE # 54
0021 D2B1              SETB    P_TXD
                                           ; SOURCE LINE # 55
0023 D2AF              SETB    EA
                                           ; SOURCE LINE # 56
0025 120000      R     LCALL   BitTime
                                           ; SOURCE LINE # 57
0028 020000      R     LJMP    BitTime
             ; FUNCTION _TxSend (END)

             ; FUNCTION _PrintString (BEGIN)
                                           ; SOURCE LINE # 69
;---- Variable 'puts' assigned to Register 'DPTR' ----
0000 8F82              MOV     DPL,R7
0002 8E83              MOV     DPH,R6
                                           ; SOURCE LINE # 70
                                           ; SOURCE LINE # 71
0004         ?C0010:
0004 E4                CLR     A
0005 93                MOVC    A,@A+DPTR
0006 FF                MOV     R7,A
0007 6006              JZ      ?C0013
0009 120000      R     LCALL   _TxSend
000C A3                INC     DPTR
000D 80F5              SJMP    ?C0010
                                           ; SOURCE LINE # 72
000F         ?C0013:
000F 22                RET     
             ; FUNCTION _PrintString (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     73    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
