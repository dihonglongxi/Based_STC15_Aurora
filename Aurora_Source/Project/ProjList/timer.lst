C51 COMPILER V9.53.0.0   TIMER                                                             03/25/2015 15:09:06 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE TIMER
OBJECT MODULE PLACED IN ..\ProjOut\timer.obj
COMPILER INVOKED BY: C:\Program Files\Keil\C51\BIN\C51.EXE ..\ProgSource\timer.c LARGE OPTIMIZE(8,SPEED) CODE PRINT(..\P
                    -rojList\timer.lst) OBJECT(..\ProjOut\timer.obj)

line level    source

   1          
   2          /*************  功能说明        **************
   3          
   4          本文件为STC15xxx系列的定时器初始化和中断程序,用户可以在这个文件中修改自己需要的中断程序.
   5          
   6          
   7          ******************************************/
   8          
   9          
  10          
  11          #include        "timer.h"
  12          
  13          /********************* Timer0中断函数************************/
  14          void timer0_int (void) interrupt TIMER0_VECTOR
  15          {
  16   1      
  17   1      }
  18          
  19          /********************* Timer1中断函数************************/
  20          void timer1_int (void) interrupt TIMER1_VECTOR
  21          {
  22   1      
  23   1      }
  24          
  25          /********************* Timer2中断函数************************/
  26          void timer2_int (void) interrupt TIMER2_VECTOR
  27          {
  28   1              P10 = ~P10;
  29   1      }
  30          
  31          
  32          //========================================================================
  33          // 函数: u8     Timer_Inilize(u8 TIM, TIM_InitTypeDef *TIMx)
  34          // 描述: 定时器初始化程序.
  35          // 参数: TIMx: 结构参数,请参考timer.h里的定义.
  36          // 返回: 成功返回0, 空操作返回1,错误返回2.
  37          // 版本: V1.0, 2012-10-22
  38          //========================================================================
  39          u8      Timer_Inilize(u8 TIM, TIM_InitTypeDef *TIMx)
  40          {
  41   1              if(TIM > Timer2)        return 1;       //空操作
  42   1      
  43   1              if(TIM == Timer0)
  44   1              {
  45   2                      TR0 = 0;                //停止计数
  46   2                      if(TIMx->TIM_Interrupt == ENABLE)               ET0 = 1;        //允许中断
  47   2                      else                                                                    ET0 = 0;        //禁止中断
  48   2                      if(TIMx->TIM_Polity == PolityHigh)              PT0 = 1;        //高优先级中断
  49   2                      else                                                                    PT0 = 0;        //低优先级中断
  50   2                      if(TIMx->TIM_Mode >  TIM_16BitAutoReloadNoMask) return 2;       //错误
  51   2                      TMOD = (TMOD & ~0x03) | TIMx->TIM_Mode; //工作模式,0: 16位自动重装, 1: 16位定时/计数, 2: 8位自动重装, 3:
             - 16位自动重装, 不可屏蔽中断
  52   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_12T)        AUXR &= ~0x80;  //12T
  53   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_1T)         AUXR |=  0x80;  //1T
C51 COMPILER V9.53.0.0   TIMER                                                             03/25/2015 15:09:06 PAGE 2   

  54   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_Ext)        TMOD |=  0x04;  //对外计数或分频
  55   2                      else                                                                            TMOD &= ~0x04;  //定时
  56   2                      if(TIMx->TIM_ClkOut == ENABLE)  INT_CLKO |=  0x01;      //输出时钟
  57   2                      else                                                    INT_CLKO &= ~0x01;      //不输出时钟
  58   2                      
  59   2                      TH0 = (u8)(TIMx->TIM_Value >> 8);
  60   2                      TL0 = (u8)TIMx->TIM_Value;
  61   2                      if(TIMx->TIM_Run == ENABLE)     TR0 = 1;        //开始运行
  62   2                      return  0;              //成功
  63   2              }
  64   1      
  65   1              if(TIM == Timer1)
  66   1              {
  67   2                      TR1 = 0;                //停止计数
  68   2                      if(TIMx->TIM_Interrupt == ENABLE)               ET1 = 1;        //允许中断
  69   2                      else                                                                    ET1 = 0;        //禁止中断
  70   2                      if(TIMx->TIM_Polity == PolityHigh)              PT1 = 1;        //高优先级中断
  71   2                      else                                                                    PT1 = 0;        //低优先级中断
  72   2                      if(TIMx->TIM_Mode >= TIM_16BitAutoReloadNoMask) return 2;       //错误
  73   2                      TMOD = (TMOD & ~0x30) | TIMx->TIM_Mode; //工作模式,0: 16位自动重装, 1: 16位定时/计数, 2: 8位自动重装
  74   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_12T)        AUXR &= ~0x40;  //12T
  75   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_1T)         AUXR |=  0x40;  //1T
  76   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_Ext)        TMOD |=  0x40;  //对外计数或分频
  77   2                      else                                                                            TMOD &= ~0x40;  //定时
  78   2                      if(TIMx->TIM_ClkOut == ENABLE)  INT_CLKO |=  0x02;      //输出时钟
  79   2                      else                                                    INT_CLKO &= ~0x02;      //不输出时钟
  80   2                      
  81   2                      TH1 = (u8)(TIMx->TIM_Value >> 8);
  82   2                      TL1 = (u8)TIMx->TIM_Value;
  83   2                      if(TIMx->TIM_Run == ENABLE)     TR1 = 1;        //开始运行
  84   2                      return  0;              //成功
  85   2              }
  86   1      
  87   1              if(TIM == Timer2)               //Timer2,固定为16位自动重装, 中断无优先级
  88   1              {
  89   2                      AUXR &= ~(1<<4);        //停止计数
  90   2                      if(TIMx->TIM_Interrupt == ENABLE)                       IE2  |=  (1<<2);        //允许中断
  91   2                      else                                                                            IE2  &= ~(1<<2);        //禁止中断
  92   2                      if(TIMx->TIM_ClkSource >  TIM_CLOCK_Ext)        return 2;
  93   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_12T)        AUXR &= ~(1<<2);        //12T
  94   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_1T)         AUXR |=  (1<<2);        //1T
  95   2                      if(TIMx->TIM_ClkSource == TIM_CLOCK_Ext)        AUXR |=  (1<<3);        //对外计数或分频
  96   2                      else                                                                            AUXR &= ~(1<<3);        //定时
  97   2                      if(TIMx->TIM_ClkOut == ENABLE)  INT_CLKO |=  0x04;      //输出时钟
  98   2                      else                                                    INT_CLKO &= ~0x04;      //不输出时钟
  99   2      
 100   2                      TH2 = (u8)(TIMx->TIM_Value >> 8);
 101   2                      TL2 = (u8)TIMx->TIM_Value;
 102   2                      if(TIMx->TIM_Run == ENABLE)     AUXR |=  (1<<4);        //开始运行
 103   2                      return  0;              //成功
 104   2              }
 105   1              return 2;       //错误
 106   1      }
C51 COMPILER V9.53.0.0   TIMER                                                             03/25/2015 15:09:06 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION timer0_int (BEGIN)
                                           ; SOURCE LINE # 14
                                           ; SOURCE LINE # 17
0000 32                RETI    
             ; FUNCTION timer0_int (END)

             ; FUNCTION timer1_int (BEGIN)
                                           ; SOURCE LINE # 20
                                           ; SOURCE LINE # 23
0000 32                RETI    
             ; FUNCTION timer1_int (END)

             ; FUNCTION timer2_int (BEGIN)
                                           ; SOURCE LINE # 26
                                           ; SOURCE LINE # 28
0000 B290              CPL     P10
                                           ; SOURCE LINE # 29
0002 32                RETI    
             ; FUNCTION timer2_int (END)

             ; FUNCTION _Timer_Inilize (BEGIN)
                                           ; SOURCE LINE # 39
;---- Variable 'TIMx' assigned to Register 'R1/R2/R3' ----
;---- Variable 'TIM' assigned to Register 'R5' ----
0000 AD07              MOV     R5,AR7
                                           ; SOURCE LINE # 40
                                           ; SOURCE LINE # 41
0002 ED                MOV     A,R5
0003 D3                SETB    C
0004 9402              SUBB    A,#02H
0006 4003              JC      ?C0004
0008 7F01              MOV     R7,#01H
000A 22                RET     
000B         ?C0004:
                                           ; SOURCE LINE # 43
000B ED                MOV     A,R5
000C 6003              JZ      $ + 5H
000E 020000      R     LJMP    ?C0006
                                           ; SOURCE LINE # 44
                                           ; SOURCE LINE # 45
0011 C28C              CLR     TR0
                                           ; SOURCE LINE # 46
0013 900002            MOV     DPTR,#02H
0016 120000      E     LCALL   ?C?CLDOPTR
0019 B40104            CJNE    A,#01H,?C0007
001C D2A9              SETB    ET0
001E 8002              SJMP    ?C0008
0020         ?C0007:
                                           ; SOURCE LINE # 47
0020 C2A9              CLR     ET0
0022         ?C0008:
                                           ; SOURCE LINE # 48
0022 900001            MOV     DPTR,#01H
0025 120000      E     LCALL   ?C?CLDOPTR
0028 B40104            CJNE    A,#01H,?C0009
002B D2B9              SETB    PT0
002D 8002              SJMP    ?C0010
002F         ?C0009:
                                           ; SOURCE LINE # 49
C51 COMPILER V9.53.0.0   TIMER                                                             03/25/2015 15:09:06 PAGE 4   

002F C2B9              CLR     PT0
0031         ?C0010:
                                           ; SOURCE LINE # 50
0031 120000      E     LCALL   ?C?CLDPTR
0034 FE                MOV     R6,A
0035 D3                SETB    C
0036 9403              SUBB    A,#03H
0038 4003              JC      ?C0011
003A 7F02              MOV     R7,#02H
003C 22                RET     
003D         ?C0011:
                                           ; SOURCE LINE # 51
003D E589              MOV     A,TMOD
003F 54FC              ANL     A,#0FCH
0041 4E                ORL     A,R6
0042 F589              MOV     TMOD,A
                                           ; SOURCE LINE # 52
0044 900003            MOV     DPTR,#03H
0047 120000      E     LCALL   ?C?CLDOPTR
004A FF                MOV     R7,A
004B B40103            CJNE    A,#01H,?C0012
004E 538E7F            ANL     AUXR,#07FH
0051         ?C0012:
                                           ; SOURCE LINE # 53
0051 EF                MOV     A,R7
0052 7003              JNZ     ?C0013
0054 438E80            ORL     AUXR,#080H
0057         ?C0013:
                                           ; SOURCE LINE # 54
0057 EF                MOV     A,R7
0058 B40205            CJNE    A,#02H,?C0014
005B 438904            ORL     TMOD,#04H
005E 8003              SJMP    ?C0015
0060         ?C0014:
                                           ; SOURCE LINE # 55
0060 5389FB            ANL     TMOD,#0FBH
0063         ?C0015:
                                           ; SOURCE LINE # 56
0063 900004            MOV     DPTR,#04H
0066 120000      E     LCALL   ?C?CLDOPTR
0069 B40105            CJNE    A,#01H,?C0016
006C 438F01            ORL     INT_CLKO,#01H
006F 8003              SJMP    ?C0017
0071         ?C0016:
                                           ; SOURCE LINE # 57
0071 538FFE            ANL     INT_CLKO,#0FEH
0074         ?C0017:
                                           ; SOURCE LINE # 59
0074 900005            MOV     DPTR,#05H
0077 120000      E     LCALL   ?C?ILDOPTR
007A E5F0              MOV     A,B
007C F58C              MOV     TH0,A
                                           ; SOURCE LINE # 60
007E 900005            MOV     DPTR,#05H
0081 120000      E     LCALL   ?C?ILDOPTR
0084 F58A              MOV     TL0,A
                                           ; SOURCE LINE # 61
0086 900007            MOV     DPTR,#07H
0089 120000      E     LCALL   ?C?CLDOPTR
008C B40102            CJNE    A,#01H,?C0018
008F D28C              SETB    TR0
0091         ?C0018:
C51 COMPILER V9.53.0.0   TIMER                                                             03/25/2015 15:09:06 PAGE 5   

                                           ; SOURCE LINE # 62
0091 7F00              MOV     R7,#00H
0093 22                RET     
                                           ; SOURCE LINE # 63
0094         ?C0006:
                                           ; SOURCE LINE # 65
0094 ED                MOV     A,R5
0095 6401              XRL     A,#01H
0097 6003              JZ      $ + 5H
0099 020000      R     LJMP    ?C0019
                                           ; SOURCE LINE # 66
                                           ; SOURCE LINE # 67
009C C28E              CLR     TR1
                                           ; SOURCE LINE # 68
009E 900002            MOV     DPTR,#02H
00A1 120000      E     LCALL   ?C?CLDOPTR
00A4 B40104            CJNE    A,#01H,?C0020
00A7 D2AB              SETB    ET1
00A9 8002              SJMP    ?C0021
00AB         ?C0020:
                                           ; SOURCE LINE # 69
00AB C2AB              CLR     ET1
00AD         ?C0021:
                                           ; SOURCE LINE # 70
00AD 900001            MOV     DPTR,#01H
00B0 120000      E     LCALL   ?C?CLDOPTR
00B3 B40104            CJNE    A,#01H,?C0022
00B6 D2BB              SETB    PT1
00B8 8002              SJMP    ?C0023
00BA         ?C0022:
                                           ; SOURCE LINE # 71
00BA C2BB              CLR     PT1
00BC         ?C0023:
                                           ; SOURCE LINE # 72
00BC 120000      E     LCALL   ?C?CLDPTR
00BF FE                MOV     R6,A
00C0 C3                CLR     C
00C1 9403              SUBB    A,#03H
00C3 4003              JC      ?C0024
00C5 7F02              MOV     R7,#02H
00C7 22                RET     
00C8         ?C0024:
                                           ; SOURCE LINE # 73
00C8 E589              MOV     A,TMOD
00CA 54CF              ANL     A,#0CFH
00CC 4E                ORL     A,R6
00CD F589              MOV     TMOD,A
                                           ; SOURCE LINE # 74
00CF 900003            MOV     DPTR,#03H
00D2 120000      E     LCALL   ?C?CLDOPTR
00D5 FF                MOV     R7,A
00D6 B40103            CJNE    A,#01H,?C0025
00D9 538EBF            ANL     AUXR,#0BFH
00DC         ?C0025:
                                           ; SOURCE LINE # 75
00DC EF                MOV     A,R7
00DD 7003              JNZ     ?C0026
00DF 438E40            ORL     AUXR,#040H
00E2         ?C0026:
                                           ; SOURCE LINE # 76
00E2 EF                MOV     A,R7
00E3 B40205            CJNE    A,#02H,?C0027
C51 COMPILER V9.53.0.0   TIMER                                                             03/25/2015 15:09:06 PAGE 6   

00E6 438940            ORL     TMOD,#040H
00E9 8003              SJMP    ?C0028
00EB         ?C0027:
                                           ; SOURCE LINE # 77
00EB 5389BF            ANL     TMOD,#0BFH
00EE         ?C0028:
                                           ; SOURCE LINE # 78
00EE 900004            MOV     DPTR,#04H
00F1 120000      E     LCALL   ?C?CLDOPTR
00F4 B40105            CJNE    A,#01H,?C0029
00F7 438F02            ORL     INT_CLKO,#02H
00FA 8003              SJMP    ?C0030
00FC         ?C0029:
                                           ; SOURCE LINE # 79
00FC 538FFD            ANL     INT_CLKO,#0FDH
00FF         ?C0030:
                                           ; SOURCE LINE # 81
00FF 900005            MOV     DPTR,#05H
0102 120000      E     LCALL   ?C?ILDOPTR
0105 E5F0              MOV     A,B
0107 F58D              MOV     TH1,A
                                           ; SOURCE LINE # 82
0109 900005            MOV     DPTR,#05H
010C 120000      E     LCALL   ?C?ILDOPTR
010F F58B              MOV     TL1,A
                                           ; SOURCE LINE # 83
0111 900007            MOV     DPTR,#07H
0114 120000      E     LCALL   ?C?CLDOPTR
0117 B40102            CJNE    A,#01H,?C0031
011A D28E              SETB    TR1
011C         ?C0031:
                                           ; SOURCE LINE # 84
011C 7F00              MOV     R7,#00H
011E 22                RET     
                                           ; SOURCE LINE # 85
011F         ?C0019:
                                           ; SOURCE LINE # 87
011F ED                MOV     A,R5
0120 6402              XRL     A,#02H
0122 7074              JNZ     ?C0032
                                           ; SOURCE LINE # 88
                                           ; SOURCE LINE # 89
0124 538EEF            ANL     AUXR,#0EFH
                                           ; SOURCE LINE # 90
0127 900002            MOV     DPTR,#02H
012A 120000      E     LCALL   ?C?CLDOPTR
012D B40105            CJNE    A,#01H,?C0033
0130 43AF04            ORL     IE2,#04H
0133 8003              SJMP    ?C0034
0135         ?C0033:
                                           ; SOURCE LINE # 91
0135 53AFFB            ANL     IE2,#0FBH
0138         ?C0034:
                                           ; SOURCE LINE # 92
0138 900003            MOV     DPTR,#03H
013B 120000      E     LCALL   ?C?CLDOPTR
013E FE                MOV     R6,A
013F D3                SETB    C
0140 9402              SUBB    A,#02H
0142 4003              JC      ?C0035
0144 7F02              MOV     R7,#02H
0146 22                RET     
C51 COMPILER V9.53.0.0   TIMER                                                             03/25/2015 15:09:06 PAGE 7   

0147         ?C0035:
                                           ; SOURCE LINE # 93
0147 EE                MOV     A,R6
0148 B40103            CJNE    A,#01H,?C0036
014B 538EFB            ANL     AUXR,#0FBH
014E         ?C0036:
                                           ; SOURCE LINE # 94
014E 900003            MOV     DPTR,#03H
0151 120000      E     LCALL   ?C?CLDOPTR
0154 7003              JNZ     ?C0037
0156 438E04            ORL     AUXR,#04H
0159         ?C0037:
                                           ; SOURCE LINE # 95
0159 900003            MOV     DPTR,#03H
015C 120000      E     LCALL   ?C?CLDOPTR
015F B40205            CJNE    A,#02H,?C0038
0162 438E08            ORL     AUXR,#08H
0165 8003              SJMP    ?C0039
0167         ?C0038:
                                           ; SOURCE LINE # 96
0167 538EF7            ANL     AUXR,#0F7H
016A         ?C0039:
                                           ; SOURCE LINE # 97
016A 900004            MOV     DPTR,#04H
016D 120000      E     LCALL   ?C?CLDOPTR
0170 B40105            CJNE    A,#01H,?C0040
0173 438F04            ORL     INT_CLKO,#04H
0176 8003              SJMP    ?C0041
0178         ?C0040:
                                           ; SOURCE LINE # 98
0178 538FFB            ANL     INT_CLKO,#0FBH
017B         ?C0041:
                                           ; SOURCE LINE # 100
017B 900005            MOV     DPTR,#05H
017E 120000      E     LCALL   ?C?ILDOPTR
0181 FD                MOV     R5,A
0182 ACF0              MOV     R4,B
0184 EC                MOV     A,R4
0185 F5D6              MOV     TH2,A
                                           ; SOURCE LINE # 101
0187 8DD7              MOV     TL2,R5
                                           ; SOURCE LINE # 102
0189 900007            MOV     DPTR,#07H
018C 120000      E     LCALL   ?C?CLDOPTR
018F B40103            CJNE    A,#01H,?C0042
0192 438E10            ORL     AUXR,#010H
0195         ?C0042:
                                           ; SOURCE LINE # 103
0195 7F00              MOV     R7,#00H
0197 22                RET     
                                           ; SOURCE LINE # 104
0198         ?C0032:
                                           ; SOURCE LINE # 105
0198 7F02              MOV     R7,#02H
                                           ; SOURCE LINE # 106
019A         ?C0005:
019A 22                RET     
             ; FUNCTION _Timer_Inilize (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.53.0.0   TIMER                                                             03/25/2015 15:09:06 PAGE 8   

   CODE SIZE        =    416    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
